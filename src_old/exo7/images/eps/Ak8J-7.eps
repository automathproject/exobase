%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 20 118 575 673
%%Creator: FreeHEP Graphics2D Driver
%%Producer: com.maplesoft.mathdoc.view.plot.paint.PlotPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: mardi 16 février 2010 16 h 52 CET
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Draw a line. (x0 y0 x1 y1 line)
/L {bias n m l S unbias} def

% Polyline primitive.
/polyline  {n m 1 exch 1 exch
           {pop currentfile token pop currentfile token pop l} for
           } def

% Draw a polyline (n x0 y0 OPL x1 y1 x2 y2 ... ... xn yn)
/OPL {bias polyline S unbias} def

% Draw a closed polyline (n x0 y0 CPL x1 y1 x2 y2 ... ... xn yn)
/CPL {bias polyline s unbias} def

% Draw a filled polyline (n x0 y0 FPL x1 y1 x2 y2 ... ... xn yn)
/FPL {polyline h f*} def

% Draw an oval. (x y w h OVL)
/OVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width currentlinewidth sub 2 div
      height currentlinewidth sub 2 div neg
      scale n 0 0 1 5 -2 roll arc
      smatrix setmatrix S} def

% Draw a filled oval. (x y w h FOVL)
/FOVL {matrix currentmatrix /smatrix exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      width 2 div xv add height 2 div yv add translate
      width 2 div
      height 2 div neg
      scale n 0 0 m 0 0 1 5 -2 roll arc
      h smatrix setmatrix f} def

% Draw a rounded rectangle. (x y w h arcwidth archeight RREC)
/RREC {matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      s} def

% Draw a filled rounded rectangle. (x y w h arcwidth archeight FRREC)
/FRREC{matrix currentmatrix /smatrix exch def
      2 div /ah exch def
      2 div /aw exch def
      /height exch def /width exch def
      /yv exch def /xv exch def
      aw ah scale matrix
      currentmatrix /nmatrix exch def
      smatrix setmatrix
      n xv width add aw sub yv m
      nmatrix setmatrix
      currentpoint exch 1 add exch
      currentpoint 1 add exch 1 add exch
      1 arct smatrix setmatrix
      xv width add yv height add ah sub l
      nmatrix setmatrix
      currentpoint 1 add
      currentpoint exch 1 sub exch 1 add
      1 arct smatrix setmatrix
      xv aw add yv height add l
      nmatrix setmatrix
      currentpoint exch 1 sub exch
      currentpoint exch 1 sub exch 1 sub
      1 arct smatrix setmatrix
      xv yv ah add l
      nmatrix setmatrix
      currentpoint 1 sub
      currentpoint exch 1 add exch 1 sub
      1 arct smatrix setmatrix
      h f} def

% Draw a string.  (string x y STR)
/STR {q m 1 -1 scale recshow Q} def

% Define basic plot symbols.
/xys   {/siz exch def /yv exch def /xv exch def} def
/hline {xys n xv siz 2. div sub yv m siz 0 rlineto S} def
/vline {xys n xv yv siz 2. div sub m 0 siz rlineto S} def
/plus  {xys n xv yv siz 2. div sub m 0 siz rlineto
                    xv siz 2. div sub yv m siz 0 rlineto S} def
/dot   {n 2. div 0 360 arc s} def
/fdot  {n 2. div 0 360 arc h f} def
/box   {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                    siz 2 sqrt div dup rs} def
/fbox  {xys n xv siz 2 sqrt div 2 div sub yv siz 2 sqrt div 2 div sub
                       siz 2 sqrt div dup rf} def
/tridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto s} def
/ftridn{xys n xv yv siz 3 sqrt div add m
                       siz 2. div neg 3 sqrt 2. div siz mul neg rlineto
                       siz 0 rlineto h f} def

% Symbols defined in terms of the others.
/star     {3 copy cross plus} def
/cross    {xys q xv yv translate 45 rotate 0 0 siz plus Q} def
/diamond  {xys q xv yv translate 45 rotate 0 0 siz box Q} def
/fdiamond {xys q xv yv translate 45 rotate 0 0 siz fbox Q} def
/triup    {xys q xv yv translate 180 rotate 0 0 siz tridn Q} def
/ftriup   {xys q xv yv translate 180 rotate 0 0 siz ftridn Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Helvetica 16#00 vg&newcompositefont
/DialogInput-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 400 setsize
fittopage
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0 0 0 RG
[ 1.00000 0 0 1.00000 0 0 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0 0 m
400.000 0 l
400.000 400.000 l
0 400.000 l
0 0 l
h
f
0 0 0 RG
0 J
1 j
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
q
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
0 0 390 390 rc
q
0.647059 0.647059 0.647059 RG
Q
q
0.647059 0.647059 0.647059 RG
Q
q
q
1.00000 0 0 RG
35.1000 2.00547 324.384 364.994 rc
newpath
357.484 184.987 m
356.280 163.902 l
352.687 143.112 l
346.762 122.910 l
338.600 103.576 l
329.777 87.6673 l
319.464 72.7804 l
307.782 59.0659 l
294.872 46.6589 l
279.076 34.4144 l
262.154 24.1129 l
244.358 15.8634 l
225.947 9.74182 l
207.064 5.77081 l
188.104 4.00549 l
169.338 4.41781 l
151.031 6.94525 l
133.517 11.4658 l
116.940 17.8618 l
101.513 25.9799 l
87.4271 35.6419 l
65.3932 56.9494 l
49.2919 81.4388 l
39.2977 108.497 l
36.1000 135.559 l
39.4780 161.780 l
48.7339 184.602 l
62.5123 202.681 l
79.2695 215.225 l
97.8065 221.928 l
115.790 222.439 l
129.766 218.238 l
140.902 210.428 l
145.604 204.796 l
149.035 198.516 l
151.115 191.800 l
151.797 184.864 l
151.060 177.904 l
148.913 171.174 l
145.408 164.894 l
140.626 159.276 l
134.913 154.675 l
128.240 151.034 l
120.756 148.497 l
112.623 147.187 l
96.7974 148.248 l
80.6261 154.032 l
62.6804 167.127 l
48.0955 186.510 l
39.7790 207.074 l
36.1857 230.450 l
38.8688 259.623 l
49.4917 288.928 l
65.5393 313.201 l
87.4240 334.330 l
101.647 344.076 l
117.235 352.247 l
133.992 358.660 l
151.696 363.159 l
169.217 365.547 l
187.159 366.000 l
205.292 364.462 l
223.377 360.906 l
241.937 355.049 l
259.913 347.037 l
277.039 336.942 l
293.059 324.870 l
306.590 312.162 l
318.814 298.033 l
329.574 282.633 l
338.732 266.129 l
346.678 247.300 l
352.503 227.644 l
356.120 207.422 l
357.474 186.901 l
356.463 165.563 l
353.004 144.503 l
347.155 124.024 l
339.010 104.417 l
330.153 88.2751 l
319.765 73.1734 l
307.973 59.2681 l
294.919 46.6998 l
279.588 34.7684 l
263.187 24.6686 l
245.944 16.5017 l
228.100 10.3397 l
209.293 6.12304 l
190.377 4.10162 l
171.623 4.25174 l
153.292 6.51541 l
136.013 10.6880 l
119.603 16.6825 l
104.267 24.3586 l
90.1873 33.5520 l
67.0833 54.9475 l
50.1327 79.8099 l
39.0691 109.468 l
36.1681 139.059 l
40.0281 163.788 l
49.1468 185.318 l
63.3872 203.535 l
80.6355 215.947 l
97.3311 221.835 l
113.616 222.699 l
121.874 221.185 l
129.425 218.401 l
136.096 214.480 l
141.733 209.581 l
145.977 204.238 l
149.106 198.348 l
151.057 192.081 l
151.792 185.616 l
151.243 178.842 l
149.362 172.256 l
146.188 166.062 l
141.791 160.454 l
136.404 155.717 l
130.053 151.876 l
122.874 149.074 l
115.021 147.432 l
97.1593 148.173 l
78.8188 154.996 l
62.4150 167.390 l
48.8869 185.105 l
39.5645 207.867 l
36.1018 234.046 l
39.3732 261.790 l
49.7907 289.509 l
65.6567 313.342 l
87.1629 334.127 l
101.762 344.145 l
117.800 352.500 l
135.062 358.995 l
153.309 363.462 l
170.251 365.627 l
187.572 365.987 l
205.066 364.493 l
222.518 361.122 l
240.838 355.462 l
258.606 347.704 l
275.566 337.915 l
291.474 326.195 l
305.499 313.288 l
318.159 298.870 l
329.282 283.100 l
338.717 266.159 l
346.829 246.875 l
352.717 226.731 l
356.287 206.006 l
357.484 184.987 l
S
cliprestore
newpath
0 0 m
0 390.000 l
390.000 390.000 l
390.000 0 l
h
W
Q
Q
q
q
newpath
337.000 369.000 m
337.000 372.000 l
S
newpath
296.000 369.000 m
296.000 372.000 l
S
newpath
316.000 369.000 m
316.000 372.000 l
S
newpath
275.000 369.000 m
275.000 372.000 l
S
newpath
234.000 369.000 m
234.000 372.000 l
S
newpath
214.000 369.000 m
214.000 372.000 l
S
newpath
193.000 369.000 m
193.000 372.000 l
S
newpath
172.000 369.000 m
172.000 372.000 l
S
newpath
131.000 369.000 m
131.000 372.000 l
S
newpath
111.000 369.000 m
111.000 372.000 l
S
newpath
90.0000 369.000 m
90.0000 372.000 l
S
newpath
70.0000 369.000 m
70.0000 372.000 l
S
newpath
33.1000 369.000 m
357.484 369.000 l
S
Q
q
q
newpath
49.0000 369.000 m
49.0000 374.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
40 379 7 13 rc
newpath
50.7900 386.438 m
42.2100 386.438 l
42.2100 385.762 l
50.7900 385.762 l
h
f
Q
newpath
49.4697 385.747 m
49.4697 384.765 49.6178 383.920 49.9140 383.211  c
50.2102 382.502 50.6038 381.974 51.0947 381.627  c
51.4755 381.352 51.8691 381.214 52.2753 381.214  c
52.9355 381.214 53.5279 381.551 54.0527 382.224  c
54.7086 383.057 55.0366 384.187 55.0366 385.613  c
55.0366 386.612 54.8927 387.460 54.6049 388.159  c
54.3172 388.857 53.9501 389.364 53.5036 389.679  c
53.0572 389.994 52.6266 390.152 52.2119 390.152  c
51.3909 390.152 50.7075 389.667 50.1616 388.698  c
49.7003 387.882 49.4697 386.898 49.4697 385.747  c
h
50.7138 385.905 m
50.7138 387.090 50.8598 388.057 51.1518 388.806  c
51.3930 389.437 51.7527 389.752 52.2309 389.752  c
52.4594 389.752 52.6964 389.649 52.9418 389.444  c
53.1873 389.239 53.3735 388.895 53.5004 388.413  c
53.6951 387.685 53.7924 386.659 53.7924 385.334  c
53.7924 384.352 53.6909 383.533 53.4877 382.877  c
53.3354 382.391 53.1386 382.046 52.8974 381.843  c
52.7239 381.703 52.5144 381.633 52.2690 381.633  c
51.9812 381.633 51.7252 381.762 51.5009 382.021  c
51.1962 382.372 50.9889 382.924 50.8789 383.677  c
50.7688 384.431 50.7138 385.173 50.7138 385.905  c
h
57.1250 388.768 m
57.3238 388.768 57.4910 388.837 57.6264 388.974  c
57.7618 389.112 57.8295 389.278 57.8295 389.473  c
57.8295 389.667 57.7608 389.833 57.6232 389.971  c
57.4857 390.109 57.3196 390.177 57.1250 390.177  c
56.9303 390.177 56.7642 390.109 56.6267 389.971  c
56.4891 389.833 56.4204 389.667 56.4204 389.473  c
56.4204 389.274 56.4891 389.107 56.6267 388.971  c
56.7642 388.836 56.9303 388.768 57.1250 388.768  c
h
64.3930 381.392 m
63.8979 382.471 l
61.3081 382.471 l
60.7431 383.627 l
61.8645 383.792 62.7532 384.208 63.4091 384.877  c
63.9720 385.453 64.2534 386.130 64.2534 386.908  c
64.2534 387.361 64.1613 387.780 63.9772 388.165  c
63.7932 388.550 63.5615 388.878 63.2822 389.149  c
63.0029 389.420 62.6918 389.638 62.3491 389.803  c
61.8624 390.036 61.3631 390.152 60.8510 390.152  c
60.3348 390.152 59.9592 390.064 59.7243 389.888  c
59.4895 389.713 59.3720 389.519 59.3720 389.308  c
59.3720 389.189 59.4207 389.084 59.5180 388.993  c
59.6154 388.902 59.7381 388.857 59.8862 388.857  c
59.9962 388.857 60.0925 388.874 60.1750 388.908  c
60.2575 388.942 60.3982 389.028 60.5971 389.168  c
60.9145 389.388 61.2361 389.498 61.5620 389.498  c
62.0571 389.498 62.4919 389.311 62.8664 388.936  c
63.2409 388.562 63.4282 388.106 63.4282 387.568  c
63.4282 387.048 63.2610 386.562 62.9267 386.112  c
62.5924 385.661 62.1311 385.313 61.5429 385.067  c
61.0817 384.877 60.4532 384.767 59.6577 384.737  c
61.3081 381.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
152.000 369.000 m
152.000 374.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
153.469 385.747 m
153.469 384.765 153.617 383.920 153.914 383.211  c
154.210 382.502 154.603 381.974 155.094 381.627  c
155.475 381.352 155.869 381.214 156.275 381.214  c
156.935 381.214 157.528 381.551 158.052 382.224  c
158.708 383.057 159.036 384.187 159.036 385.613  c
159.036 386.612 158.892 387.460 158.605 388.159  c
158.317 388.857 157.950 389.364 157.503 389.679  c
157.057 389.994 156.626 390.152 156.211 390.152  c
155.391 390.152 154.707 389.667 154.161 388.698  c
153.700 387.882 153.469 386.898 153.469 385.747  c
h
154.713 385.905 m
154.713 387.090 154.859 388.057 155.151 388.806  c
155.393 389.437 155.752 389.752 156.231 389.752  c
156.459 389.752 156.696 389.649 156.941 389.444  c
157.187 389.239 157.373 388.895 157.500 388.413  c
157.695 387.685 157.792 386.659 157.792 385.334  c
157.792 384.352 157.690 383.533 157.487 382.877  c
157.335 382.391 157.138 382.046 156.897 381.843  c
156.724 381.703 156.514 381.633 156.269 381.633  c
155.981 381.633 155.725 381.762 155.501 382.021  c
155.196 382.372 154.988 382.924 154.878 383.677  c
154.768 384.431 154.713 385.173 154.713 385.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
255.000 369.000 m
255.000 374.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
251.469 385.747 m
251.469 384.765 251.617 383.920 251.914 383.211  c
252.210 382.502 252.603 381.974 253.094 381.627  c
253.475 381.352 253.869 381.214 254.275 381.214  c
254.935 381.214 255.528 381.551 256.052 382.224  c
256.708 383.057 257.036 384.187 257.036 385.613  c
257.036 386.612 256.892 387.460 256.605 388.159  c
256.317 388.857 255.950 389.364 255.503 389.679  c
255.057 389.994 254.626 390.152 254.211 390.152  c
253.391 390.152 252.707 389.667 252.161 388.698  c
251.700 387.882 251.469 386.898 251.469 385.747  c
h
252.713 385.905 m
252.713 387.090 252.859 388.057 253.151 388.806  c
253.393 389.437 253.752 389.752 254.231 389.752  c
254.459 389.752 254.696 389.649 254.941 389.444  c
255.187 389.239 255.373 388.895 255.500 388.413  c
255.695 387.685 255.792 386.659 255.792 385.334  c
255.792 384.352 255.690 383.533 255.487 382.877  c
255.335 382.391 255.138 382.046 254.897 381.843  c
254.724 381.703 254.514 381.633 254.269 381.633  c
253.981 381.633 253.725 381.762 253.501 382.021  c
253.196 382.372 252.988 382.924 252.878 383.677  c
252.768 384.431 252.713 385.173 252.713 385.905  c
h
259.125 388.768 m
259.323 388.768 259.491 388.837 259.626 388.974  c
259.761 389.112 259.829 389.278 259.829 389.473  c
259.829 389.667 259.760 389.833 259.623 389.971  c
259.485 390.109 259.319 390.177 259.125 390.177  c
258.930 390.177 258.764 390.109 258.626 389.971  c
258.489 389.833 258.420 389.667 258.420 389.473  c
258.420 389.274 258.489 389.107 258.626 388.971  c
258.764 388.836 258.930 388.768 259.125 388.768  c
h
266.393 381.392 m
265.897 382.471 l
263.308 382.471 l
262.743 383.627 l
263.864 383.792 264.753 384.208 265.409 384.877  c
265.972 385.453 266.253 386.130 266.253 386.908  c
266.253 387.361 266.161 387.780 265.977 388.165  c
265.793 388.550 265.561 388.878 265.282 389.149  c
265.002 389.420 264.691 389.638 264.349 389.803  c
263.862 390.036 263.363 390.152 262.851 390.152  c
262.334 390.152 261.959 390.064 261.724 389.888  c
261.489 389.713 261.372 389.519 261.372 389.308  c
261.372 389.189 261.420 389.084 261.518 388.993  c
261.615 388.902 261.738 388.857 261.886 388.857  c
261.996 388.857 262.092 388.874 262.175 388.908  c
262.257 388.942 262.398 389.028 262.597 389.168  c
262.914 389.388 263.236 389.498 263.562 389.498  c
264.057 389.498 264.491 389.311 264.866 388.936  c
265.241 388.562 265.428 388.106 265.428 387.568  c
265.428 387.048 265.261 386.562 264.926 386.112  c
264.592 385.661 264.131 385.313 263.543 385.067  c
263.081 384.877 262.453 384.767 261.657 384.737  c
263.308 381.392 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
357.000 369.000 m
357.000 374.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
360.523 382.236 m
362.618 381.214 l
362.827 381.214 l
362.827 388.482 l
362.827 388.965 362.847 389.265 362.887 389.384  c
362.928 389.502 363.011 389.593 363.138 389.657  c
363.265 389.720 363.523 389.756 363.913 389.765  c
363.913 390.000 l
360.675 390.000 l
360.675 389.765 l
361.082 389.756 361.344 389.721 361.462 389.660  c
361.581 389.599 361.663 389.516 361.710 389.412  c
361.757 389.309 361.780 388.999 361.780 388.482  c
361.780 383.836 l
361.780 383.210 361.759 382.808 361.716 382.630  c
361.687 382.495 361.633 382.395 361.554 382.332  c
361.476 382.268 361.382 382.236 361.272 382.236  c
361.115 382.236 360.897 382.302 360.618 382.433  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
q
newpath
33.0000 41.0000 m
30.0000 41.0000 l
S
newpath
33.0000 82.0000 m
30.0000 82.0000 l
S
newpath
33.0000 123.000 m
30.0000 123.000 l
S
newpath
33.0000 164.000 m
30.0000 164.000 l
S
newpath
33.0000 206.000 m
30.0000 206.000 l
S
newpath
33.0000 247.000 m
30.0000 247.000 l
S
newpath
33.0000 288.000 m
30.0000 288.000 l
S
newpath
33.0000 329.000 m
30.0000 329.000 l
S
newpath
33.0000 369.000 m
33.0000 4.00549 l
S
Q
q
q
newpath
33.0000 350.000 m
28.0000 350.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 348 7 13 rc
newpath
16.7900 355.438 m
8.21000 355.438 l
8.21000 354.762 l
16.7900 354.762 l
h
f
Q
newpath
15.4697 354.747 m
15.4697 353.765 15.6178 352.920 15.9140 352.211  c
16.2102 351.502 16.6038 350.974 17.0947 350.627  c
17.4755 350.352 17.8691 350.214 18.2753 350.214  c
18.9355 350.214 19.5279 350.551 20.0527 351.224  c
20.7086 352.057 21.0366 353.187 21.0366 354.613  c
21.0366 355.612 20.8927 356.460 20.6049 357.159  c
20.3172 357.857 19.9501 358.364 19.5036 358.679  c
19.0572 358.994 18.6266 359.152 18.2119 359.152  c
17.3909 359.152 16.7075 358.667 16.1616 357.698  c
15.7003 356.882 15.4697 355.898 15.4697 354.747  c
h
16.7138 354.905 m
16.7138 356.090 16.8598 357.057 17.1518 357.806  c
17.3930 358.437 17.7527 358.752 18.2309 358.752  c
18.4594 358.752 18.6964 358.649 18.9418 358.444  c
19.1873 358.239 19.3735 357.895 19.5004 357.413  c
19.6951 356.685 19.7924 355.659 19.7924 354.334  c
19.7924 353.352 19.6909 352.533 19.4877 351.877  c
19.3354 351.391 19.1386 351.046 18.8974 350.843  c
18.7239 350.703 18.5144 350.633 18.2690 350.633  c
17.9812 350.633 17.7252 350.762 17.5009 351.021  c
17.1962 351.372 16.9889 351.924 16.8789 352.677  c
16.7688 353.431 16.7138 354.173 16.7138 354.905  c
h
23.1250 357.768 m
23.3238 357.768 23.4910 357.837 23.6264 357.974  c
23.7618 358.112 23.8295 358.278 23.8295 358.473  c
23.8295 358.667 23.7608 358.833 23.6232 358.971  c
23.4857 359.109 23.3196 359.177 23.1250 359.177  c
22.9303 359.177 22.7642 359.109 22.6267 358.971  c
22.4891 358.833 22.4204 358.667 22.4204 358.473  c
22.4204 358.274 22.4891 358.107 22.6267 357.971  c
22.7642 357.836 22.9303 357.768 23.1250 357.768  c
h
27.2446 354.664 m
26.5633 354.106 26.1242 353.657 25.9274 353.318  c
25.7307 352.980 25.6323 352.629 25.6323 352.265  c
25.6323 351.706 25.8481 351.225 26.2797 350.821  c
26.7114 350.416 27.2848 350.214 28.0000 350.214  c
28.6940 350.214 29.2526 350.403 29.6757 350.779  c
30.0989 351.156 30.3105 351.585 30.3105 352.068  c
30.3105 352.390 30.1962 352.717 29.9677 353.052  c
29.7392 353.386 29.2631 353.780 28.5395 354.232  c
29.2843 354.808 29.7773 355.261 30.0185 355.591  c
30.3401 356.022 30.5009 356.477 30.5009 356.956  c
30.5009 357.561 30.2703 358.078 29.8090 358.508  c
29.3478 358.937 28.7426 359.152 27.9936 359.152  c
27.1769 359.152 26.5400 358.896 26.0830 358.384  c
25.7190 357.973 25.5371 357.525 25.5371 357.038  c
25.5371 356.657 25.6651 356.280 25.9211 355.905  c
26.1771 355.531 26.6183 355.117 27.2446 354.664  c
h
28.2412 353.985 m
28.7490 353.528 29.0706 353.167 29.2060 352.903  c
29.3414 352.638 29.4091 352.339 29.4091 352.004  c
29.4091 351.560 29.2843 351.212 29.0346 350.960  c
28.7849 350.708 28.4443 350.583 28.0127 350.583  c
27.5810 350.583 27.2298 350.707 26.9589 350.957  c
26.6881 351.207 26.5527 351.499 26.5527 351.833  c
26.5527 352.053 26.6088 352.273 26.7209 352.493  c
26.8330 352.713 26.9928 352.923 27.2002 353.122  c
h
27.5429 354.905 m
27.1917 355.202 26.9314 355.524 26.7622 355.873  c
26.5929 356.222 26.5083 356.600 26.5083 357.006  c
26.5083 357.552 26.6574 357.989 26.9558 358.317  c
27.2541 358.645 27.6339 358.809 28.0952 358.809  c
28.5522 358.809 28.9182 358.680 29.1933 358.422  c
29.4684 358.164 29.6059 357.851 29.6059 357.482  c
29.6059 357.178 29.5255 356.905 29.3647 356.664  c
29.0642 356.215 28.4570 355.629 27.5429 354.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 308.000 m
28.0000 308.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 307 7 13 rc
newpath
16.7900 314.438 m
8.21000 314.438 l
8.21000 313.762 l
16.7900 313.762 l
h
f
Q
newpath
15.4697 313.747 m
15.4697 312.765 15.6178 311.920 15.9140 311.211  c
16.2102 310.502 16.6038 309.974 17.0947 309.627  c
17.4755 309.352 17.8691 309.214 18.2753 309.214  c
18.9355 309.214 19.5279 309.551 20.0527 310.224  c
20.7086 311.057 21.0366 312.187 21.0366 313.613  c
21.0366 314.612 20.8927 315.460 20.6049 316.159  c
20.3172 316.857 19.9501 317.364 19.5036 317.679  c
19.0572 317.994 18.6266 318.152 18.2119 318.152  c
17.3909 318.152 16.7075 317.667 16.1616 316.698  c
15.7003 315.882 15.4697 314.898 15.4697 313.747  c
h
16.7138 313.905 m
16.7138 315.090 16.8598 316.057 17.1518 316.806  c
17.3930 317.437 17.7527 317.752 18.2309 317.752  c
18.4594 317.752 18.6964 317.649 18.9418 317.444  c
19.1873 317.239 19.3735 316.895 19.5004 316.413  c
19.6951 315.685 19.7924 314.659 19.7924 313.334  c
19.7924 312.352 19.6909 311.533 19.4877 310.877  c
19.3354 310.391 19.1386 310.046 18.8974 309.843  c
18.7239 309.703 18.5144 309.633 18.2690 309.633  c
17.9812 309.633 17.7252 309.762 17.5009 310.021  c
17.1962 310.372 16.9889 310.924 16.8789 311.677  c
16.7688 312.431 16.7138 313.173 16.7138 313.905  c
h
23.1250 316.768 m
23.3238 316.768 23.4910 316.837 23.6264 316.974  c
23.7618 317.112 23.8295 317.278 23.8295 317.473  c
23.8295 317.667 23.7608 317.833 23.6232 317.971  c
23.4857 318.109 23.3196 318.177 23.1250 318.177  c
22.9303 318.177 22.7642 318.109 22.6267 317.971  c
22.4891 317.833 22.4204 317.667 22.4204 317.473  c
22.4204 317.274 22.4891 317.107 22.6267 316.971  c
22.7642 316.836 22.9303 316.768 23.1250 316.768  c
h
30.5771 309.214 m
30.5771 309.449 l
30.0185 309.504 29.5625 309.615 29.2092 309.783  c
28.8558 309.950 28.5067 310.205 28.1618 310.547  c
27.8169 310.890 27.5313 311.272 27.3049 311.693  c
27.0785 312.114 26.8891 312.615 26.7368 313.194  c
27.3461 312.775 27.9576 312.566 28.5712 312.566  c
29.1595 312.566 29.6694 312.803 30.1010 313.277  c
30.5327 313.751 30.7485 314.360 30.7485 315.105  c
30.7485 315.824 30.5306 316.480 30.0947 317.073  c
29.5699 317.792 28.8759 318.152 28.0127 318.152  c
27.4244 318.152 26.9251 317.957 26.5146 317.568  c
25.7106 316.810 25.3085 315.829 25.3085 314.623  c
25.3085 313.852 25.4630 313.120 25.7719 312.426  c
26.0808 311.732 26.5220 311.117 27.0954 310.579  c
27.6688 310.042 28.2179 309.680 28.7426 309.494  c
29.2674 309.307 29.7561 309.214 30.2089 309.214  c
h
26.6289 313.658 m
26.5527 314.229 26.5146 314.690 26.5146 315.042  c
26.5146 315.448 26.5897 315.889 26.7399 316.365  c
26.8902 316.841 27.1134 317.219 27.4096 317.498  c
27.6254 317.697 27.8878 317.796 28.1967 317.796  c
28.5649 317.796 28.8939 317.623 29.1838 317.276  c
29.4737 316.929 29.6186 316.434 29.6186 315.791  c
29.6186 315.067 29.4747 314.441 29.1870 313.912  c
28.8992 313.383 28.4908 313.118 27.9619 313.118  c
27.8011 313.118 27.6286 313.152 27.4445 313.220  c
27.2605 313.287 26.9886 313.433 26.6289 313.658  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 267.000 m
28.0000 267.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 266 7 13 rc
newpath
16.7900 273.438 m
8.21000 273.438 l
8.21000 272.762 l
16.7900 272.762 l
h
f
Q
newpath
15.4697 272.747 m
15.4697 271.765 15.6178 270.920 15.9140 270.211  c
16.2102 269.502 16.6038 268.974 17.0947 268.627  c
17.4755 268.352 17.8691 268.214 18.2753 268.214  c
18.9355 268.214 19.5279 268.551 20.0527 269.224  c
20.7086 270.057 21.0366 271.187 21.0366 272.613  c
21.0366 273.612 20.8927 274.460 20.6049 275.159  c
20.3172 275.857 19.9501 276.364 19.5036 276.679  c
19.0572 276.994 18.6266 277.152 18.2119 277.152  c
17.3909 277.152 16.7075 276.667 16.1616 275.698  c
15.7003 274.882 15.4697 273.898 15.4697 272.747  c
h
16.7138 272.905 m
16.7138 274.090 16.8598 275.057 17.1518 275.806  c
17.3930 276.437 17.7527 276.752 18.2309 276.752  c
18.4594 276.752 18.6964 276.649 18.9418 276.444  c
19.1873 276.239 19.3735 275.895 19.5004 275.413  c
19.6951 274.685 19.7924 273.659 19.7924 272.334  c
19.7924 271.352 19.6909 270.533 19.4877 269.877  c
19.3354 269.391 19.1386 269.046 18.8974 268.843  c
18.7239 268.703 18.5144 268.633 18.2690 268.633  c
17.9812 268.633 17.7252 268.762 17.5009 269.021  c
17.1962 269.372 16.9889 269.924 16.8789 270.677  c
16.7688 271.431 16.7138 272.173 16.7138 272.905  c
h
23.1250 275.768 m
23.3238 275.768 23.4910 275.837 23.6264 275.974  c
23.7618 276.112 23.8295 276.278 23.8295 276.473  c
23.8295 276.667 23.7608 276.833 23.6232 276.971  c
23.4857 277.109 23.3196 277.177 23.1250 277.177  c
22.9303 277.177 22.7642 277.109 22.6267 276.971  c
22.4891 276.833 22.4204 276.667 22.4204 276.473  c
22.4204 276.274 22.4891 276.107 22.6267 275.971  c
22.7642 275.836 22.9303 275.768 23.1250 275.768  c
h
30.7993 273.826 m
30.7993 274.727 l
29.6440 274.727 l
29.6440 277.000 l
28.5966 277.000 l
28.5966 274.727 l
24.9531 274.727 l
24.9531 273.915 l
28.9458 268.214 l
29.6440 268.214 l
29.6440 273.826 l
h
28.5966 273.826 m
28.5966 269.554 l
25.5752 273.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 226.000 m
28.0000 226.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
q
6 225 7 13 rc
newpath
16.7900 232.438 m
8.21000 232.438 l
8.21000 231.762 l
16.7900 231.762 l
h
f
Q
newpath
15.4697 231.747 m
15.4697 230.765 15.6178 229.920 15.9140 229.211  c
16.2102 228.502 16.6038 227.974 17.0947 227.627  c
17.4755 227.352 17.8691 227.214 18.2753 227.214  c
18.9355 227.214 19.5279 227.551 20.0527 228.224  c
20.7086 229.057 21.0366 230.187 21.0366 231.613  c
21.0366 232.612 20.8927 233.460 20.6049 234.159  c
20.3172 234.857 19.9501 235.364 19.5036 235.679  c
19.0572 235.994 18.6266 236.152 18.2119 236.152  c
17.3909 236.152 16.7075 235.667 16.1616 234.698  c
15.7003 233.882 15.4697 232.898 15.4697 231.747  c
h
16.7138 231.905 m
16.7138 233.090 16.8598 234.057 17.1518 234.806  c
17.3930 235.437 17.7527 235.752 18.2309 235.752  c
18.4594 235.752 18.6964 235.649 18.9418 235.444  c
19.1873 235.239 19.3735 234.895 19.5004 234.413  c
19.6951 233.685 19.7924 232.659 19.7924 231.334  c
19.7924 230.352 19.6909 229.533 19.4877 228.877  c
19.3354 228.391 19.1386 228.046 18.8974 227.843  c
18.7239 227.703 18.5144 227.633 18.2690 227.633  c
17.9812 227.633 17.7252 227.762 17.5009 228.021  c
17.1962 228.372 16.9889 228.924 16.8789 229.677  c
16.7688 230.431 16.7138 231.173 16.7138 231.905  c
h
23.1250 234.768 m
23.3238 234.768 23.4910 234.837 23.6264 234.974  c
23.7618 235.112 23.8295 235.278 23.8295 235.473  c
23.8295 235.667 23.7608 235.833 23.6232 235.971  c
23.4857 236.109 23.3196 236.177 23.1250 236.177  c
22.9303 236.177 22.7642 236.109 22.6267 235.971  c
22.4891 235.833 22.4204 235.667 22.4204 235.473  c
22.4204 235.274 22.4891 235.107 22.6267 234.971  c
22.7642 234.836 22.9303 234.768 23.1250 234.768  c
h
30.7104 234.343 m
30.1074 236.000 l
25.0293 236.000 l
25.0293 235.765 l
26.5231 234.402 27.5747 233.289 28.1840 232.426  c
28.7934 231.563 29.0981 230.773 29.0981 230.058  c
29.0981 229.512 28.9309 229.064 28.5966 228.712  c
28.2623 228.361 27.8624 228.186 27.3969 228.186  c
26.9738 228.186 26.5939 228.309 26.2575 228.557  c
25.9211 228.804 25.6725 229.167 25.5117 229.646  c
25.2768 229.646 l
25.3826 228.863 25.6545 228.262 26.0925 227.843  c
26.5305 227.424 27.0774 227.214 27.7334 227.214  c
28.4316 227.214 29.0145 227.439 29.4821 227.887  c
29.9497 228.336 30.1835 228.865 30.1835 229.474  c
30.1835 229.910 30.0820 230.346 29.8789 230.782  c
29.5657 231.467 29.0579 232.193 28.3554 232.959  c
27.3017 234.110 26.6437 234.804 26.3813 235.041  c
28.6284 235.041 l
29.0854 235.041 29.4060 235.024 29.5900 234.990  c
29.7741 234.956 29.9402 234.888 30.0883 234.784  c
30.2364 234.680 30.3655 234.533 30.4755 234.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 185.000 m
28.0000 185.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
25.4697 189.747 m
25.4697 188.765 25.6178 187.920 25.9140 187.211  c
26.2102 186.502 26.6038 185.974 27.0947 185.627  c
27.4755 185.352 27.8691 185.214 28.2753 185.214  c
28.9355 185.214 29.5279 185.551 30.0527 186.224  c
30.7086 187.057 31.0366 188.187 31.0366 189.613  c
31.0366 190.612 30.8927 191.460 30.6049 192.159  c
30.3172 192.857 29.9501 193.364 29.5036 193.679  c
29.0572 193.994 28.6266 194.152 28.2119 194.152  c
27.3909 194.152 26.7075 193.667 26.1616 192.698  c
25.7003 191.882 25.4697 190.898 25.4697 189.747  c
h
26.7138 189.905 m
26.7138 191.090 26.8598 192.057 27.1518 192.806  c
27.3930 193.437 27.7527 193.752 28.2309 193.752  c
28.4594 193.752 28.6964 193.649 28.9418 193.444  c
29.1873 193.239 29.3735 192.895 29.5004 192.413  c
29.6951 191.685 29.7924 190.659 29.7924 189.334  c
29.7924 188.352 29.6909 187.533 29.4877 186.877  c
29.3354 186.391 29.1386 186.046 28.8974 185.843  c
28.7239 185.703 28.5144 185.633 28.2690 185.633  c
27.9812 185.633 27.7252 185.762 27.5009 186.021  c
27.1962 186.372 26.9889 186.924 26.8789 187.677  c
26.7688 188.431 26.7138 189.173 26.7138 189.905  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 144.000 m
28.0000 144.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
15.4697 148.747 m
15.4697 147.765 15.6178 146.920 15.9140 146.211  c
16.2102 145.502 16.6038 144.974 17.0947 144.627  c
17.4755 144.352 17.8691 144.214 18.2753 144.214  c
18.9355 144.214 19.5279 144.551 20.0527 145.224  c
20.7086 146.057 21.0366 147.187 21.0366 148.613  c
21.0366 149.612 20.8927 150.460 20.6049 151.159  c
20.3172 151.857 19.9501 152.364 19.5036 152.679  c
19.0572 152.994 18.6266 153.152 18.2119 153.152  c
17.3909 153.152 16.7075 152.667 16.1616 151.698  c
15.7003 150.882 15.4697 149.898 15.4697 148.747  c
h
16.7138 148.905 m
16.7138 150.090 16.8598 151.057 17.1518 151.806  c
17.3930 152.437 17.7527 152.752 18.2309 152.752  c
18.4594 152.752 18.6964 152.649 18.9418 152.444  c
19.1873 152.239 19.3735 151.895 19.5004 151.413  c
19.6951 150.685 19.7924 149.659 19.7924 148.334  c
19.7924 147.352 19.6909 146.533 19.4877 145.877  c
19.3354 145.391 19.1386 145.046 18.8974 144.843  c
18.7239 144.703 18.5144 144.633 18.2690 144.633  c
17.9812 144.633 17.7252 144.762 17.5009 145.021  c
17.1962 145.372 16.9889 145.924 16.8789 146.677  c
16.7688 147.431 16.7138 148.173 16.7138 148.905  c
h
23.1250 151.768 m
23.3238 151.768 23.4910 151.837 23.6264 151.974  c
23.7618 152.112 23.8295 152.278 23.8295 152.473  c
23.8295 152.667 23.7608 152.833 23.6232 152.971  c
23.4857 153.109 23.3196 153.177 23.1250 153.177  c
22.9303 153.177 22.7642 153.109 22.6267 152.971  c
22.4891 152.833 22.4204 152.667 22.4204 152.473  c
22.4204 152.274 22.4891 152.107 22.6267 151.971  c
22.7642 151.836 22.9303 151.768 23.1250 151.768  c
h
30.7104 151.343 m
30.1074 153.000 l
25.0293 153.000 l
25.0293 152.765 l
26.5231 151.402 27.5747 150.289 28.1840 149.426  c
28.7934 148.563 29.0981 147.773 29.0981 147.058  c
29.0981 146.512 28.9309 146.064 28.5966 145.712  c
28.2623 145.361 27.8624 145.186 27.3969 145.186  c
26.9738 145.186 26.5939 145.309 26.2575 145.557  c
25.9211 145.804 25.6725 146.167 25.5117 146.646  c
25.2768 146.646 l
25.3826 145.863 25.6545 145.262 26.0925 144.843  c
26.5305 144.424 27.0774 144.214 27.7334 144.214  c
28.4316 144.214 29.0145 144.439 29.4821 144.887  c
29.9497 145.336 30.1835 145.865 30.1835 146.474  c
30.1835 146.910 30.0820 147.346 29.8789 147.782  c
29.5657 148.467 29.0579 149.193 28.3554 149.959  c
27.3017 151.110 26.6437 151.804 26.3813 152.041  c
28.6284 152.041 l
29.0854 152.041 29.4060 152.024 29.5900 151.990  c
29.7741 151.956 29.9402 151.888 30.0883 151.784  c
30.2364 151.680 30.3655 151.533 30.4755 151.343  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 103.000 m
28.0000 103.000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
15.4697 107.747 m
15.4697 106.765 15.6178 105.920 15.9140 105.211  c
16.2102 104.502 16.6038 103.974 17.0947 103.627  c
17.4755 103.352 17.8691 103.214 18.2753 103.214  c
18.9355 103.214 19.5279 103.551 20.0527 104.224  c
20.7086 105.057 21.0366 106.187 21.0366 107.613  c
21.0366 108.612 20.8927 109.460 20.6049 110.159  c
20.3172 110.857 19.9501 111.364 19.5036 111.679  c
19.0572 111.994 18.6266 112.152 18.2119 112.152  c
17.3909 112.152 16.7075 111.667 16.1616 110.698  c
15.7003 109.882 15.4697 108.898 15.4697 107.747  c
h
16.7138 107.905 m
16.7138 109.090 16.8598 110.057 17.1518 110.806  c
17.3930 111.437 17.7527 111.752 18.2309 111.752  c
18.4594 111.752 18.6964 111.649 18.9418 111.444  c
19.1873 111.239 19.3735 110.895 19.5004 110.413  c
19.6951 109.685 19.7924 108.659 19.7924 107.334  c
19.7924 106.352 19.6909 105.533 19.4877 104.877  c
19.3354 104.391 19.1386 104.046 18.8974 103.843  c
18.7239 103.703 18.5144 103.633 18.2690 103.633  c
17.9812 103.633 17.7252 103.762 17.5009 104.021  c
17.1962 104.372 16.9889 104.924 16.8789 105.677  c
16.7688 106.431 16.7138 107.173 16.7138 107.905  c
h
23.1250 110.768 m
23.3238 110.768 23.4910 110.837 23.6264 110.974  c
23.7618 111.112 23.8295 111.278 23.8295 111.473  c
23.8295 111.667 23.7608 111.833 23.6232 111.971  c
23.4857 112.109 23.3196 112.177 23.1250 112.177  c
22.9303 112.177 22.7642 112.109 22.6267 111.971  c
22.4891 111.833 22.4204 111.667 22.4204 111.473  c
22.4204 111.274 22.4891 111.107 22.6267 110.971  c
22.7642 110.836 22.9303 110.768 23.1250 110.768  c
h
30.7993 108.826 m
30.7993 109.727 l
29.6440 109.727 l
29.6440 112.000 l
28.5966 112.000 l
28.5966 109.727 l
24.9531 109.727 l
24.9531 108.915 l
28.9458 103.214 l
29.6440 103.214 l
29.6440 108.826 l
h
28.5966 108.826 m
28.5966 104.554 l
25.5752 108.826 l
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 62.0000 m
28.0000 62.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
15.4697 66.7470 m
15.4697 65.7653 15.6178 64.9200 15.9140 64.2111  c
16.2102 63.5023 16.6038 62.9744 17.0947 62.6274  c
17.4755 62.3523 17.8691 62.2148 18.2753 62.2148  c
18.9355 62.2148 19.5279 62.5512 20.0527 63.2241  c
20.7086 64.0577 21.0366 65.1876 21.0366 66.6137  c
21.0366 67.6124 20.8927 68.4609 20.6049 69.1591  c
20.3172 69.8574 19.9501 70.3641 19.5036 70.6794  c
19.0572 70.9947 18.6266 71.1523 18.2119 71.1523  c
17.3909 71.1523 16.7075 70.6678 16.1616 69.6987  c
15.7003 68.8820 15.4697 67.8981 15.4697 66.7470  c
h
16.7138 66.9057 m
16.7138 68.0906 16.8598 69.0576 17.1518 69.8066  c
17.3930 70.4371 17.7527 70.7524 18.2309 70.7524  c
18.4594 70.7524 18.6964 70.6498 18.9418 70.4445  c
19.1873 70.2393 19.3735 69.8955 19.5004 69.4130  c
19.6951 68.6852 19.7924 67.6590 19.7924 66.3344  c
19.7924 65.3527 19.6909 64.5338 19.4877 63.8779  c
19.3354 63.3912 19.1386 63.0463 18.8974 62.8432  c
18.7239 62.7036 18.5144 62.6337 18.2690 62.6337  c
17.9812 62.6337 17.7252 62.7628 17.5009 63.0210  c
17.1962 63.3722 16.9889 63.9244 16.8789 64.6777  c
16.7688 65.4309 16.7138 66.1736 16.7138 66.9057  c
h
23.1250 69.7685 m
23.3238 69.7685 23.4910 69.8373 23.6264 69.9748  c
23.7618 70.1123 23.8295 70.2784 23.8295 70.4731  c
23.8295 70.6678 23.7608 70.8339 23.6232 70.9714  c
23.4857 71.1089 23.3196 71.1777 23.1250 71.1777  c
22.9303 71.1777 22.7642 71.1089 22.6267 70.9714  c
22.4891 70.8339 22.4204 70.6678 22.4204 70.4731  c
22.4204 70.2742 22.4891 70.1071 22.6267 69.9716  c
22.7642 69.8362 22.9303 69.7685 23.1250 69.7685  c
h
30.5771 62.2148 m
30.5771 62.4497 l
30.0185 62.5047 29.5625 62.6158 29.2092 62.7829  c
28.8558 62.9501 28.5067 63.2050 28.1618 63.5478  c
27.8169 63.8906 27.5313 64.2725 27.3049 64.6936  c
27.0785 65.1146 26.8891 65.6150 26.7368 66.1948  c
27.3461 65.7758 27.9576 65.5664 28.5712 65.5664  c
29.1595 65.5664 29.6694 65.8033 30.1010 66.2773  c
30.5327 66.7513 30.7485 67.3606 30.7485 68.1054  c
30.7485 68.8248 30.5306 69.4807 30.0947 70.0732  c
29.5699 70.7926 28.8759 71.1523 28.0127 71.1523  c
27.4244 71.1523 26.9251 70.9576 26.5146 70.5683  c
25.7106 69.8108 25.3085 68.8291 25.3085 67.6230  c
25.3085 66.8528 25.4630 66.1207 25.7719 65.4267  c
26.0808 64.7327 26.5220 64.1170 27.0954 63.5795  c
27.6688 63.0421 28.2179 62.6803 28.7426 62.4941  c
29.2674 62.3079 29.7561 62.2148 30.2089 62.2148  c
h
26.6289 66.6582 m
26.5527 67.2294 26.5146 67.6907 26.5146 68.0419  c
26.5146 68.4482 26.5897 68.8894 26.7399 69.3654  c
26.8902 69.8415 27.1134 70.2192 27.4096 70.4985  c
27.6254 70.6974 27.8878 70.7968 28.1967 70.7968  c
28.5649 70.7968 28.8939 70.6233 29.1838 70.2763  c
29.4737 69.9293 29.6186 69.4342 29.6186 68.7910  c
29.6186 68.0673 29.4747 67.4410 29.1870 66.9121  c
28.8992 66.3831 28.4908 66.1186 27.9619 66.1186  c
27.8011 66.1186 27.6286 66.1525 27.4445 66.2202  c
27.2605 66.2879 26.9886 66.4339 26.6289 66.6582  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
q
newpath
33.0000 20.0000 m
28.0000 20.0000 l
S
[ 1.00000 0 0 1.00000 -5.00000 -5.00000 ] concat
newpath
15.4697 25.7470 m
15.4697 24.7653 15.6178 23.9200 15.9140 23.2111  c
16.2102 22.5023 16.6038 21.9744 17.0947 21.6274  c
17.4755 21.3523 17.8691 21.2148 18.2753 21.2148  c
18.9355 21.2148 19.5279 21.5512 20.0527 22.2241  c
20.7086 23.0577 21.0366 24.1876 21.0366 25.6137  c
21.0366 26.6124 20.8927 27.4609 20.6049 28.1591  c
20.3172 28.8574 19.9501 29.3641 19.5036 29.6794  c
19.0572 29.9947 18.6266 30.1523 18.2119 30.1523  c
17.3909 30.1523 16.7075 29.6678 16.1616 28.6987  c
15.7003 27.8820 15.4697 26.8981 15.4697 25.7470  c
h
16.7138 25.9057 m
16.7138 27.0906 16.8598 28.0576 17.1518 28.8066  c
17.3930 29.4371 17.7527 29.7524 18.2309 29.7524  c
18.4594 29.7524 18.6964 29.6498 18.9418 29.4445  c
19.1873 29.2393 19.3735 28.8955 19.5004 28.4130  c
19.6951 27.6852 19.7924 26.6590 19.7924 25.3344  c
19.7924 24.3527 19.6909 23.5338 19.4877 22.8779  c
19.3354 22.3912 19.1386 22.0463 18.8974 21.8432  c
18.7239 21.7036 18.5144 21.6337 18.2690 21.6337  c
17.9812 21.6337 17.7252 21.7628 17.5009 22.0210  c
17.1962 22.3722 16.9889 22.9244 16.8789 23.6777  c
16.7688 24.4309 16.7138 25.1736 16.7138 25.9057  c
h
23.1250 28.7685 m
23.3238 28.7685 23.4910 28.8373 23.6264 28.9748  c
23.7618 29.1123 23.8295 29.2784 23.8295 29.4731  c
23.8295 29.6678 23.7608 29.8339 23.6232 29.9714  c
23.4857 30.1089 23.3196 30.1777 23.1250 30.1777  c
22.9303 30.1777 22.7642 30.1089 22.6267 29.9714  c
22.4891 29.8339 22.4204 29.6678 22.4204 29.4731  c
22.4204 29.2742 22.4891 29.1071 22.6267 28.9716  c
22.7642 28.8362 22.9303 28.7685 23.1250 28.7685  c
h
27.2446 25.6645 m
26.5633 25.1059 26.1242 24.6573 25.9274 24.3188  c
25.7307 23.9803 25.6323 23.6290 25.6323 23.2651  c
25.6323 22.7065 25.8481 22.2251 26.2797 21.8210  c
26.7114 21.4169 27.2848 21.2148 28.0000 21.2148  c
28.6940 21.2148 29.2526 21.4031 29.6757 21.7797  c
30.0989 22.1564 30.3105 22.5859 30.3105 23.0683  c
30.3105 23.3899 30.1962 23.7179 29.9677 24.0522  c
29.7392 24.3865 29.2631 24.7801 28.5395 25.2329  c
29.2843 25.8084 29.7773 26.2612 30.0185 26.5913  c
30.3401 27.0229 30.5009 27.4778 30.5009 27.9560  c
30.5009 28.5612 30.2703 29.0785 29.8090 29.5080  c
29.3478 29.9375 28.7426 30.1523 27.9936 30.1523  c
27.1769 30.1523 26.5400 29.8963 26.0830 29.3842  c
25.7190 28.9738 25.5371 28.5252 25.5371 28.0385  c
25.5371 27.6577 25.6651 27.2800 25.9211 26.9055  c
26.1771 26.5310 26.6183 26.1173 27.2446 25.6645  c
h
28.2412 24.9853 m
28.7490 24.5283 29.0706 24.1675 29.2060 23.9030  c
29.3414 23.6385 29.4091 23.3391 29.4091 23.0048  c
29.4091 22.5605 29.2843 22.2124 29.0346 21.9606  c
28.7849 21.7089 28.4443 21.5830 28.0127 21.5830  c
27.5810 21.5830 27.2298 21.7078 26.9589 21.9575  c
26.6881 22.2071 26.5527 22.4991 26.5527 22.8335  c
26.5527 23.0535 26.6088 23.2736 26.7209 23.4936  c
26.8330 23.7137 26.9928 23.9231 27.2002 24.1220  c
h
27.5429 25.9057 m
27.1917 26.2019 26.9314 26.5246 26.7622 26.8737  c
26.5929 27.2229 26.5083 27.6005 26.5083 28.0068  c
26.5083 28.5527 26.6574 28.9896 26.9558 29.3176  c
27.2541 29.6455 27.6339 29.8095 28.0952 29.8095  c
28.5522 29.8095 28.9182 29.6805 29.1933 29.4223  c
29.4684 29.1642 29.6059 28.8510 29.6059 28.4829  c
29.6059 28.1782 29.5255 27.9052 29.3647 27.6640  c
29.0642 27.2154 28.4570 26.6293 27.5429 25.9057  c
h
f
[ 1.00000 0 0 1.00000 5.00000 5.00000 ] concat
Q
Q
Q
Q
cliprestore
0 0 400 400 rc
[ 1.00000 0 0 1.00000 0 0 ] concat
[ 1.00000 0 0 1.00000 0 0 ] concat
cliprestore
2 J
0 j
end end restore showpage

%%Trailer
%%EOF
